                <table class="table table-primary table-bordered">

                    {{-- TABLE HEADERS + TIMETABLE WITH PRESENCES OF CURRENT CLASSROOM FROM TODAY --}}
                    <tr>
                        <th scope="col">Imie nazwisko ucznia</th>
                        @foreach($classroom->lessons()->where('day', $day)->get() as $lesson)
                            <th>{{ $timetable[$lesson->lesson_number] }}</th>
                        @endforeach
                    </tr>

                    {{-- SHOWING EACH USER AND HIS PRESENCES ON LESSONS --}}
                    @foreach($classroom->users as $student)
                        <tr>
                            {{-- STUDENTS NAME --}}
                            <td>
                                {{ $student->name }}
                            </td>
                            @foreach($student->classroom->lessons()->where('day', $day)->orderBy('lesson_number', 'asc')->get() as $lesson)
                                @php($currentLesson->id == $lesson->id ? $bordered = 'table-success' : $bordered = '')
                                <td class="text-center {{ $bordered }}">
                                    @if($lesson->presences()->where('user_id', $student->id)->where('date', $date)->get()->count() == 0)
                                        @php(App\Models\Presence::create(['date' => $date, 'lesson_id' => $lesson->id, 'classroom_id' => $classroom->id, 'lesson_number' => $lesson->lesson_number, 'user_id' => $student->id, 'type' => 7]))
                                    @endif
                                    @php($presence = $lesson->presences()->where('user_id', $student->id)->where('date', $date)->first())
                                    {!! $presenceTypes[$presence->type-1]['text'] !!}
                                </td>
                            @endforeach
                        </tr>
                    @endforeach
                </table> 


                stroka 28

                gamno bomza jake ja probuwaw:
export default {
    name: "Lessonnavigate",
    props: {
        id:String
    },
    data() {
        return {
            lessonsApiData: [],
            lessons: []
        }
    },
    methods: {  
        sendDataToChangeTable(x){
            this.emitter.emit("ChangeTableData", {data: x});
        }
    },
    mounted() {
        // requests to get today lessons data by /todayLessons/{id}
        axios
            .get(`/api/todayLessons/${this.id}`)
            .then(response => {
                this.lessonsApiData = response.data;
                console.log(this.lessonsApiData);
            })
            .catch(error => {
                console.log(error);
            })
            .then(() => {
                this.lessonsApiData.forEach(element => {
                    const lessonPusher = {
                        ClassName: null,
                        LessonName: null,
                        LessonTime: null 
                    }
                    axios.get(`/api/subject/${element.classroom_id}`).then(response => {
                        console.log(response.data);
                        lessonPusher.LessonName = response.data.name;
                    }).catch(error => {
                        console.log(error);
                    }).then(() => {
                        axios.get(`/api/classroom/${element.classroom_id}`).then(response => {
                            console.log(response.data);
                            lessonPusher.ClassName = response.data.name;
                        }).catch(error => {
                            console.log(error);
                        }).then(() => {
                            axios.get(`/api/lesson/${element.lesson_id}`).then(response => {
                                console.log(response.data);
                                lessonPusher.LessonTime = response.data.time;
                            })
                            this.lessons.push(lessonPusher);
                        })
                    })
                });
            })
    },
}